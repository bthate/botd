#!/usr/bin/python3 -u
# BOTLIB - the bot library !
#
#

## imports

#import os, sys ; sys.path.insert(0, os.getcwd())

from bot.spc import Console, Kernel
from bot.spc import daemon, execute, os, parse_cli, root

from bot.krn import __version__
from bot.rss import Fetcher
from bot.irc import IRC

## defines

opts = [
    ('-l', '--loglevel', 'store', str, "debug", 'set loglevel.', 'level'),
    ('-o', '--options', 'store', str, "", "options to use", 'options'),
    ('-w', '--workdir', 'store', str, os.path.expanduser("~/.bot"), "directory to work on", 'workdir'),
]


txt="""[Unit]
Description=BOTD - the 24/7 channel daemon
After=network-online.target
Wants=network-online.target

[Service]
ExecStart=/usr/local/bin/botd

[Install]
WantedBy=multi-user.target
"""


## functions

def hup(event):
    for x in os.popen("service botd stop").readlines():
        print(x.rstrip())
    for x in os.popen("service botd start").readlines():
        print(x.rstrip())
    for x in os.popen("systemctl status botd --no-pager").readlines():
        print(x.rstrip())
    event.reply("ok")
    
def install(event):
    k = get_kernel()
    f = open("/etc/systemd/system/botd.service", "w")
    f.write(txt % (k.cfg.name, k.cfg.name))
    f.close()
    os.popen("systemctl enable botd")
    os.popen("systemctl daemon-reload")
    event.reply("ok")

def remove(event):
    p = "/etc/systemd/system/botd.service"
    if os.path.exists(p):
        for l in os.popen("rm %s" % p).readlines():
            print(l) 
    event.reply("ok")

## main

def main():
    cfg = parse_cli("botd", opts, wd="/var/lib/botd", version=__version__)
    k = Kernel(cfg)
    if root():
        k.register("hup", hup)
        k.register("install", install)
        k.register("remove", remove)
    k.scan("bot")
    i = IRC()
    i.start()
    f = Fetcher()
    f.start()
    k.start()
       
execute(main)
