#!/usr/bin/python3 -u
# BOTD - the 24/7 channel daemon !
#
#

import grp, os, pwd

from bot.csl import Console
from bot.dbs import last
from bot.irc import Cfg, IRC
from bot.isp import find_shorts
from bot.obj import format, save
from bot.shl import daemon, execute, parse_cli, root, setwd
from bot.krn import k, __version__

from botd.rss import Fetcher
from botd.udp import UDP

import bot.obj

txt="""[Unit]
Description=BOTD - the 24/7 channel daemon
After=network-online.target
Wants=network-online.target

[Service]
ExecStart=/usr/local/bin/botd
Type=simple
PrivateTmp=yes
WorkingDirectory=/var/lib/botd
CapabilityBoundingSet=CAP_AUDIT_CONTROL

[Install]
WantedBy=multi-user.target
"""

def cfg(event):
    c = Cfg()
    last(c)
    if event.sets:
        c.update(event.sets)
        save(c)
    event.reply(format(c))

def ed(event):
    if not event.args:
        event.reply(list_files(bot.obj.workdir) or "no files yet")
        return
    cn = event.args[0]
    shorts = find_shorts("bot")
    if shorts:
        cn = shorts[0]
    db = Db()
    l = db.last(cn)
    if not l:
        try:
            c = get_cls(cn)
            l = c()
            event.reply("created %s" % cn)
        except ENOCLASS:
            event.reply(list_files(bot.obj.workdir) or "no files yet")
            return
    if len(event.args) == 1:
        event.reply(l)
        return
    if len(event.args) == 2:
        setter = {event.args[1]: ""}
    else:
        setter = {event.args[1]: event.args[2]}
    edit(l, setter)
    save(l)
    event.reply("ok")

def hup(event):
    for x in os.popen("service botd stop").readlines():
        print(x.rstrip())
    for x in os.popen("service botd start").readlines():
        print(x.rstrip())
    for x in os.popen("systemctl status botd --no-pager").readlines():
        print(x.rstrip())
    event.reply("ok")
    
def install(event):
    f = open("/etc/systemd/system/botd.service", "w")
    f.write(txt)
    f.close()
    if not os.path.exists("/var/lib/botd"):
        os.mkdir("/var/lib/botd")
    os.popen("systemctl enable botd")
    os.popen("systemctl daemon-reload")
    event.reply("ok")

def remove(event):
    p = "/etc/systemd/system/botd.service"
    if os.path.exists(p):
        os.popen("rm %s" % p)
    event.reply("ok")

def main():
    cfg = parse_cli()
    k.walk("botd")
    if root():
        k.cmds.register("hup", hup)
        k.cmds.register("install", install)
        k.cmds.register("remove", remove)
    k.cmds.register("cfg", cfg)
    k.cmds.register("ed", ed)
    if cfg.txt:
        return k.cmd(cfg.txt)
    wait = False
    if "d" in cfg.opts:
        daemon()
        wait = True
    k.start()
    if "i" in cfg.opts:
        i = IRC()
        i.start()
        wait = True
    if "r" in cfg.opts:
        f = Fetcher()
        f.start()
    if "u" in cfg.opts:
        u = UDP()
        u.start()
    if "s" in cfg.opts:
        c = Console()
        c.start()
        wait = True
    if wait:
        k.wait()

execute(main)
