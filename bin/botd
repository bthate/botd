#!/usr/bin/python3 -u
# BOTLIB - Framework to program bots (a botlib).
#
# bin/bot 

__version__ = 1

import os, sys ; sys.path.insert(0, os.getcwd())

import logging

from bl.err import EINIT
from bl.krn import Kernel, kernels
from bl.shl import execute, parse_cli
from bl.trm import termreset

opts = [
    ('-b', '--daemon', 'store_true', False, 'enable daemon mode', 'daemon'),
    ('-d', '--datadir', 'store', str, "", 'set working directory.', 'workdir'),
    ('-k', '--kernel', "store_true", False, "read kernel config from file", 'kernel'),
    ('-m', '--modules', 'store', str, "", 'modules to load.', 'modules'),
    ('-o', '--options', "store", str, "", "options to use.", 'options'),
    ('-p', '--prompting', "store_false", True, "prompt for initial values.", 'prompting'),
    ('-s', '--save', "store", str, "", "save cli options to kernel config", 'dosave'),
    ('-l', '--loglevel', 'store', str, "", 'set loglevel.', 'level'),
    ('-a', '--logdir', "store", str, "", "directory to find the logfiles.", 'logdir'),
    ('-z', '--shell', "store_false", True, "disable shell", 'shell')
]

def daemon():
    pid = os.fork()
    if pid != 0:
        termreset()
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", 'r')
    so = open("/dev/null", 'a+')
    se = open("/dev/null", 'a+')
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

def main():
    cfg = parse_cli("botd", __version__, opts)
    k = Kernel(cfg)
    if cfg.daemon:
        daemon()
    k.cfg.shell = False
    k.cfg.prompting = False
    k.init("cmd,irc")
    k.start()
    k.wait()

execute(main)
os._exit(0)
