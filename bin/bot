#!/usr/bin/python3 -u
# BOTD - python3 IRC channel daemon.
#
# 

__version__ = 1

import os, sys ; sys.path.insert(0, os.getcwd())

import os
import logging
import sys

import bl.krn
import bl.tbl

from bl.csl import Console
from bl.err import EINIT
from bl.krn import Kernel, workdir
from bl.log import level, logfiled
from bl.shl import close_history, enable_history, parse_cli, set_completer
from bl.trm import reset, save
from bl.trc import get_exception
from bl.utl import hd

opts = [
    ('-b', '--background', 'store_true', False, 'run in daemon mode.', 'daemon'),
    ('-d', '--datadir', 'store', str, 'set working directory.', 'workdir'),
    ('-m', '--modules', 'store', str, 'modules to load.', 'modules'),
    ('-x', '--exec', 'store_true', False, 'execute command.', 'doexec'),
    ('-o', '--options', "store", str, "options to use.", 'options'),
    ('-k', '--kernel', "store_true", False, "read from previous kernel config.", 'kernel'),
    ('-p', '--prompting', "store_false", True, "disable prompting for initial values.", 'prompting'),
    ('-s', '--save', 'store_true', False, 'save configuration files.', 'dosave'),
    ('-z', '--shell', 'store_true', False, 'disable shell.', 'shell'),
    ('-e', '--exclude', 'store', str, 'exclude modules.', 'exclude'),
    ('-l', '--loglevel', 'store', str, 'set loglevel.', 'level'),
    ('-a', '--logdir', "store", str, "directory to find the logfiles.", 'logdir'),
    ('-v', '--verbose', 'store_true', False, 'enable verbose mode.', 'verbose')
]

def execute(main):
    save()
    try:
        main()
    except KeyboardInterrupt:
        print("")
    except Exception:
        logging.error(get_exception())
    reset()
    close_history()


def main():
    k = Kernel("botd", __version__, opts)
    k.start()
    k.load_mod("botd.cmd")
    try:
        k.init(k.cfg.modules)
    except EINIT as ex:
        print(ex)
        return
    k.wait()

execute(main)
os._exit(0)
