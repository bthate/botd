#!/usr/bin/python3 -u
# BOTLIB - Framework to program bots (a botlib).
#
# bin/botctl

__version__ = 1

import os, sys ; sys.path.insert(0, os.getcwd())

import logging

from botd.err import EINIT
from botd.krn import Kernel, kernels
from botd.hdl import Event
from botd.shl import execute, parse_cli

opts = [
    ('-d', '--datadir', 'store', str, "", 'set working directory.', 'workdir'),
    ('-k', '--kernel', "store_true", False, "read kernel config from file", 'kernel'),
    ('-m', '--modules', 'store', str, "", 'modules to load.', 'modules'),
    ('-o', '--options', "store", str, "", "options to use.", 'options'),
    ('-p', '--prompting', "store_false", True, "prompt for initial values.", 'prompting'),
    ('-s', '--save', "store", str, "", "save cli options to kernel config", 'dosave'),
    ('-l', '--loglevel', 'store', str, "", 'set loglevel.', 'level'),
    ('-a', '--logdir', "store", str, "", "directory to find the logfiles.", 'logdir'),
    ('-z', '--shell', "store_false", True, "disable shell", 'shell')
]

def main():
    cfg = parse_cli("bot", __version__, opts)
    cfg.shell = False
    cfg.prompting = False
    k = Kernel(cfg)
    k.init("cmd,shw,cfg,dbs")
    k.init(k.cfg.modules)
    from botd.csl import Console
    c = Console()
    k.fleet.add(c)
    e = Event()
    e.txt = cfg.txt
    e.origin = "root@shell"
    e.orig = repr(c)
    k.dispatch(e)
    e.wait()

execute(main)
os._exit(0)
