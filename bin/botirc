#!/usr/bin/python3 -u
# BOTLIB - Framework to program bots (a botlib).
#
# bin/bot 

__version__ = 1

import os, sys ; sys.path.insert(0, os.getcwd())

import logging
import os
 
from botd.err import EINIT
from botd.krn import Kernel
from botd.csl import Console
from botd.log import level
from botd.shl import execute, parse_cli
from botd.trm import termreset

opts = [
    ('-d', '--datadir', 'store', str, os.path.join(os.getcwd(), ".botd"), 'set working directory.', 'workdir'),
    ('-m', '--modules', 'store', str, "", 'modules to load.', 'modules'),
    ('-l', '--loglevel', 'store', str, "", 'set loglevel.', 'level'),
    ('-p', '--prompting', 'store_true', False, "", "query for initial values."),
    ('-a', '--logdir', "store", str, "", "directory to find the logfiles.", 'logdir'),
]

def main():
    parse_cli("botsh", __version__, opts)
    k = Kernel()
    try:
        server, channel, nick = k.cfg.args
    except ValueError:
        raise EINIT("%s <server> <channel> <nick>" % k.cfg.name)
    bot.cfg.server = server
    bot.cfg.channel = channel
    bot.cfg.nick = nick
    bot.cfg.save()
    k.start(True)
    k.wait()

execute(main)
os._exit(0)
